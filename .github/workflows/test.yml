name: Test

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        compiler: [g++-11]
    env:
      CXX: ${{ matrix.compiler }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies
      run: sudo apt update && sudo apt -y install cmake libgtest-dev ninja-build google-mock libfmt-dev libgmock-dev
    - name: Install Compiler
      if: matrix.compiler == 'g++-11'
      run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        && sudo apt -y install g++-11
    - name: Install Compiler
      if: matrix.compiler == 'clang++-14'
      run: printf "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main\ndeb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main" | tee /etc/apt/sources.list.d/clang.list
                   && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
                   && apt update
                   && apt -y install clang-14 libc++-14-dev libc++abi-14-dev
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
